Lab_Ash = Lab_Ash_Filtered %>% distinct(LabID, .keep_all = T) %>% select(LabID, Ash)
# Table 14
Lab_PB_Data  = read.csv(file = "Sugar_Cane_Input_Files/Lab_Pol_Brix.csv",
header = T, sep = ",", dec = ".")
# Table 15 ExpectedBrix
Lab_PB_Data = Lab_PB_Data %>% mutate(PredBrix = ExpectedBrix(Pol))
# Table 17
Lab_PB = Lab_PB_Data %>% filter(abs(Lab_PB_Data$Brix - Lab_PB_Data$PredBrix) < 1) %>%
filter(Brix > 15 & Brix < 30 & Pol > 50 & Pol <  105) %>%
select(LabID, Pol, Brix )
# Table 18
Lab = full_join(Lab_Ash, Lab_Fibre, by=c("LabID" = "LabID"))
# Table 19
Lab = full_join(Lab, Lab_PB, by=c("LabID" = "LabID"))
# Table 20
write.table(Lab, file = "Lab_Out.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = FALSE, col.names = TRUE,
qmethod = c("escape", "double"), fileEncoding = "")
View(Lab_Fibre)
View(Lab_Fibre)
# Table 21
transform(Lab_Fibre, Fibre = z_stand(Fibre))
View(Lab_Fibre)
View(Lab_Fibre)
# Table 21
Lab_Fibre1 = transform(Lab_Fibre, Fibre = z_stand(Fibre))
View(Lab_Fibre1)
View(Lab_Fibre1)
# Table 21
Lab_Fibre = transform(Lab_Fibre, Fibre = z_stand(Fibre))
View(Lab_Fibre)
View(Lab_Fibre)
# Table 21
Lab_Fibre = transform(Lab_Fibre, Fibre = z_stand(Fibre))
write.table(Lab_Fibre, file = "Lab_Fibre_Out.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = FALSE, col.names = TRUE,
qmethod = c("escape", "double"), fileEncoding = "")
Lab_Fibre_Data1 = transform(Lab_Fibre_Data, Fibre111 = 100 * (InitialSampleCanWeight_1 - FinalSampleCanWeight_1) / SampleWeight_1)
View(Lab_Fibre_Data1)
View(Lab_Fibre_Data1)
# Table 22
Lab_Ash_log10 = Lab_Ash %>% mutate(log10(Ash))
Lab_Ash_z_stand = Lab_Ash %>% mutate(z_stand(Ash))
View(Lab_Ash_log10)
View(Lab_Ash_log10)
View(Lab_Ash_z_stand)
View(Lab_Ash_z_stand)
# Table 22
Lab_Ash = Lab_Ash %>% mutate(Ash = log10(Ash))
Lab_Ash = Lab_Ash %>% mutate(Ash = z_stand(Ash))
View(Lab_Ash)
View(Lab_Ash)
# Table 22
Lab_Ash = Lab_Ash %>% mutate(Ash = log10(Ash)) %>% mutate(Ash = z_stand(Ash))
# Table 10
Lab_Ash_Data = read.csv(file = "Sugar_Cane_Input_Files/Lab_Ash_Weights.csv",
header = T, sep = ",", dec = ".")
# Table 11
Lab_Ash_Calculated = Lab_Ash_Data %>% filter(TinWeight > 0 & InitialSampleInTinWeight > 0
& FinalSampleInTinWeight > 0) %>%
mutate(Ash = 100 * (FinalSampleInTinWeight - TinWeight ) / (InitialSampleInTinWeight - TinWeight) )
# Table 12
Lab_Ash_Filtered = Lab_Ash_Calculated %>% filter(Ash > 0) %>% filter(Ash < 8)
# Table 13
Lab_Ash = Lab_Ash_Filtered %>% distinct(LabID, .keep_all = T) %>% select(LabID, Ash)
View(Lab_Ash)
View(Lab_Ash)
# Table 22
Lab_Ash = Lab_Ash %>% mutate(Ash = log10(Ash)) %>% mutate(Ash = z_stand(Ash))
View(Lab_Ash_Filtered)
View(Lab_Ash_Filtered)
View(Lab_Ash_Filtered)
View(Lab_Ash_Filtered)
Lab_Ash = Lab_Ash_Filtered %>% group_by(LabID) %>% summarise(Ash = mean(Ash))
View(Lab_Ash)
View(Lab_Ash)
# Table 18
Lab = full_join(Lab_Ash, Lab_Fibre, by=c("LabID" = "LabID"))
# Table 19
Lab = full_join(Lab, Lab_PB, by=c("LabID" = "LabID"))
# Table 20
write.table(Lab, file = "Lab_Out.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = FALSE, col.names = TRUE,
qmethod = c("escape", "double"), fileEncoding = "")
# Table 22
Lab_Ash = Lab_Ash %>% mutate(Ash = log10(Ash)) %>% mutate(Ash = z_stand(Ash))
write.table(Lab_Ash, file = "Lab_Ash_Out.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = FALSE, col.names = TRUE,
qmethod = c("escape", "double"), fileEncoding = "")
# Table 23
Lab_PB$Bbin = cut(Lab_PB$Brix, 40, labels = FALSE)
View(Lab_PB)
View(Lab_PB)
# Table 24
Lab_PB$Bbin = as.factor(Lab_PB$Bbin)
str(Lab_PB)
# Table 25
Lab_B_Stratified_Balanced = sample_n(Lab_PB, size = 50, replace = T)
View(Lab_B_Stratified_Balanced)
View(Lab_B_Stratified_Balanced)
# Table 25
Lab_B_Stratified_Balanced = sample_n(Lab_PB$Brix, size = 50, replace = T)
# Table 25
Lab_B_Stratified_Balanced = sample_n(Lab_PB, size = 50, replace = T)
# Table 26
Lab_PB_sampled = transform(Lab_B_Stratified_Balanced, Brix = rescale_01(Brix))
View(Lab_PB_sampled)
View(Lab_PB_sampled)
View(Lab_PB_Data)
View(Lab_PB_Data)
Lab_B_sampled = Lab_PB_sampled %>% select(LabID, Brix)
write.table(Lab_B_sampled = "Lab_Brix_Out.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = FALSE, col.names = TRUE,
qmethod = c("escape", "double"), fileEncoding = "")
write.table(Lab_B_sampled,file = "Lab_Brix_Out.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = FALSE, col.names = TRUE,
qmethod = c("escape", "double"), fileEncoding = "")
Lab_B_Stratified_Balanced[49329]
Lab_B_Stratified_Balanced[49329,]
# Table 25
Lab_B_Stratified_Balanced = Lab_PB %>% group_by(Bbin) %>% sample_n(Lab_PB, size = 50, replace = T)
# Table 25
Lab_B_Stratified_Balanced = Lab_PB %>% group_by(Bbin) %>% summarise(sample_n(Lab_PB, size = 50, replace = T))
View(Lab_B_Stratified_Balanced)
# Table 26
Lab_PB_sampled = transform(Lab_B_Stratified_Balanced, Brix = rescale_01(Brix))
Lab_B_sampled = Lab_PB_sampled %>% select(LabID, Brix)
write.table(Lab_B_sampled,file = "Lab_Brix_Out.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = FALSE, col.names = TRUE,
qmethod = c("escape", "double"), fileEncoding = "")
View(Lab_B_sampled)
View(Lab_B_sampled)
Lab_B_Stratified_Balanced[49329]
View(Lab_B_Stratified_Balanced)
View(Lab_B_Stratified_Balanced)
Lab_B_Stratified_Balanced$Bbin[49329]
Lab_B_Stratified_Balanced$Bbin[2748,]
Lab_B_Stratified_Balanced$LabID[2748,]
which(Lab_B_Stratified_Balanced == "2728"), arr.ind=TRUE)
View(Lab_B_Stratified_Balanced)
View(Lab_B_Stratified_Balanced)
# Table 27
Lab_P_Stratified_Balanced = Lab_PB %>% group_by(Bbin) %>% summarise(sample_n(Lab_PB, size = 50, replace = T))
# Table 26
Lab_B_sampled = transform(Lab_B_Stratified_Balanced, Brix = rescale_01(Brix))
Lab_B_sampled = Lab_PB_sampled %>% select(LabID, Brix)
write.table(Lab_B_sampled,file = "Lab_Brix_Out.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = FALSE, col.names = TRUE,
qmethod = c("escape", "double"), fileEncoding = "")
# Table 26
Lab_B_sampled = transform(Lab_B_Stratified_Balanced, Brix = rescale_01(Brix))
Lab_B_sampled = Lab_B_sampled %>% select(LabID, Brix)
write.table(Lab_B_sampled,file = "Lab_Brix_Out.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = FALSE, col.names = TRUE,
qmethod = c("escape", "double"), fileEncoding = "")
# Table 27
Lab_P_Stratified_Balanced = Lab_PB %>% group_by(Bbin) %>% summarise(sample_n(Lab_PB, size = 50, replace = T))
Lab_P_sampled = Lab_P_Stratified_Balanced %>% mutate(Pol = rescale_01(Pol)) %>% select(LabID, Pol)
write.table(Lab_B_sampled,file = "Lab_Brix_Out.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = FALSE, col.names = TRUE,
qmethod = c("escape", "double"), fileEncoding = "")
write.table(Lab_B_sampled,file = "Lab_Brix_Out.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = FALSE, col.names = TRUE,
qmethod = c("escape", "double"), fileEncoding = "")
write.table(Lab_P_sampled,file = "Lab_Pol_Out.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = FALSE, col.names = TRUE,
qmethod = c("escape", "double"), fileEncoding = "")
Lab_P_sampled = Lab_P_Stratified_Balanced %>% mutate(Pol = rescale_01(Pol)) %>% select(LabID, Pol)
Lab_P_sampled = Lab_P_Stratified_Balanced %>% mutate(Pol = rescale_01(Pol))
Lab_P_sampled = Lab_P_sampled %>% select(LabID, Pol)
Lab_P_sampled = select(Lab_P_sampled, LabID, Pol)
?ungroup
Lab_P_sampled = Lab_P_Stratified_Balanced %>% mutate(Pol = rescale_01(Pol)) %>% ungroup()%>% select(Lab_P_sampled, LabID, Pol)
# Table 26
Lab_B_sampled = transform(Lab_B_Stratified_Balanced, Brix = rescale_01(Brix))
View(Lab_B_sampled)
View(Lab_B_sampled)
str(Lab_B_sampled)
Lab_B_sampled = Lab_B_sampled %>% select(LabID, Brix)
write.table(Lab_B_sampled,file = "Lab_Brix_Out.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = FALSE, col.names = TRUE,
qmethod = c("escape", "double"), fileEncoding = "")
# Table 27
Lab_P_Stratified_Balanced1 = Lab_PB %>% group_by(Bbin) %>% summarise(sample_n(Lab_PB, size = 50, replace = T))
View(Lab_P_Stratified_Balanced)
View(Lab_P_Stratified_Balanced)
Lab_P_Stratified_Balanced1$Bbin = as.character(Lab_P_Stratified_Balanced1$Bbin)
Lab_P_sampled = Lab_P_Stratified_Balanced %>% mutate(Pol = rescale_01(Pol)) %>% ungroup()%>% select(Lab_P_sampled, LabID, Pol)
Lab_P_sampled = Lab_P_Stratified_Balanced %>% mutate(Pol = rescale_01(Pol)) %>% select(Lab_P_sampled, LabID, Pol)
Lab_P_sampled = Lab_P_Stratified_Balanced1 %>% mutate(Pol = rescale_01(Pol)) %>% select(Lab_P_sampled, LabID, Pol)
Lab_P_sampled = Lab_P_Stratified_Balanced1 %>% mutate(Pol = rescale_01(Pol)) %>% select(LabID, Pol)
View(Lab_P_sampled)
View(Lab_P_sampled)
Lab_P_sampled = Lab_P_Stratified_Balanced1 %>% mutate(Pol = rescale_01(Pol)) %>% select(LabID, Pol) %>% select(LabID, Pol)
View(Lab_P_sampled)
View(Lab_P_sampled)
Lab_P_sampled = Lab_P_sampled[-Bbin,]
View(Lab_P_sampled)
View(Lab_P_sampled)
Lab_P_sampled = Lab_P_Stratified_Balanced1 %>% mutate(Pol = rescale_01(Pol)) %>% select(-Bbin)
View(Lab_P_sampled)
View(Lab_P_sampled)
Lab_P_sampled = Lab_P_Stratified_Balanced1 %>% mutate(Pol = rescale_01(Pol)) %>% subset(select(-Bbin))
Lab_P_sampled = Lab_P_Stratified_Balanced1 %>% mutate(Pol = rescale_01(Pol)) %>% subset(select = -Bbin))
Lab_P_sampled = subset(Lab_P_sampled,select = -Bbin))
Lab_P_sampled = subset(Lab_P_sampled, select = -Bbin))
Lab_P_sampled = subset(Lab_P_sampled, select = -Bbin)
View(Lab_P_sampled)
View(Lab_P_sampled)
# Table 27
Lab_P_Stratified_Balanced = Lab_PB %>% group_by(Bbin) %>% summarise(sample_n(Lab_PB, size = 50, replace = T))
Lab_P_sampled = subset(Lab_P_Stratified_Balanced, select = -Bbin)
Lab_P_sampled = Lab_P_Stratified_Balanced1 %>% mutate(Pol = rescale_01(Pol)) %>% select(LabID, Pol)
View(Lab_P_sampled)
View(Lab_P_sampled)
Lab_P_sampled = subset(Lab_P_sampled, select = -Bbin)
View(Lab_P_sampled)
View(Lab_P_sampled)
# Table 27
Lab_P_Stratified_Balanced = Lab_PB %>% group_by(Bbin) %>% summarise(sample_n(Lab_PB, size = 50, replace = T))
Lab_P_sampled = Lab_P_Stratified_Balanced1 %>% mutate(Pol = rescale_01(Pol)) %>% select(LabID, Pol)
Lab_P_sampled = subset(Lab_P_sampled, select = -Bbin)
View(Lab_P_sampled)
View(Lab_P_sampled)
write.table(Lab_P_sampled,file = "Lab_Pol_Out.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = FALSE, col.names = TRUE,
qmethod = c("escape", "double"), fileEncoding = "")
18182
Lab_P_Stratified_Balanced$LabID[49329,]
Lab_P_Stratified_Balanced$LabID(49329,)
View(Lab_P_sampled)
View(Lab_P_sampled)
View(Lab_P_Stratified_Balanced)
View(Lab_P_Stratified_Balanced)
View(rescale_01)
# Table 27
Lab_P_Stratified_Balanced = Lab_PB %>% group_by(Bbin) %>% summarise(sample_n(Lab_PB, size = 50, replace = T))
Lab_P_sampled = Lab_P_Stratified_Balanced1 %>% mutate(Pol = rescale_01(Pol)) %>% select(LabID, Pol)
Lab_P_sampled = subset(Lab_P_sampled, select = -Bbin)
View(Lab_P_sampled)
View(Lab_P_sampled)
write.table(Lab_P_sampled,file = "Lab_Pol_Out.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = FALSE, col.names = TRUE,
qmethod = c("escape", "double"), fileEncoding = "")
write.table(Lab_P_sampled,file = "Lab_Pol_Out.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = FALSE, col.names = TRUE,
qmethod = c("escape", "double"), fileEncoding = "")
# Table 29
NIRData = read.csv("Sugar_Cane_Input_Files/NIRPred.csv",
header = T, sep = ",", dec = ".")
View(NIRData)
View(NIRData)
summary(NIRData)
NIRData[1:15,]
View(NIRData)
View(NIRData)
sum(NIRData$ScanID < 0)
# Table 30
NIRData$DateTime = as.POSIXct(NIRData$DateTime, format = "%Y-%m-%d %H:%M:%S")
View(NIRData)
View(NIRData)
floor(NIRData$ScanID)
NIRData
View(NIRData)
View(NIRData)
# Table 31
NIRData$ID = floor(NIRData$ScanID)
View(NIRData)
View(NIRData)
NIRData[1:15, ]
NIRData[1:15,]
sum(NIRData$ScanID == -1)
sum(NIRData$ScanID < 0)
sum(NIRData$ScanID > 0)
# Table 32
NIRData_Filtered = NIRData %>% filter(GH < 3.5 & NH < 2) %>%
filter(NIR_Brix > 15 & NIR_Brix < 30 & NIR_Pol > 50 & NIR_Pol <  105 &
NIR_Fibre > 4 & NIR_Fibre < 25 & NIR_Ash > 0 & NIR_Ash < 8) %>%
filter(ScanID > 0)
View(NIRData)
View(NIRData)
View(NIRData_Filtered)
View(NIRData_Filtered)
# Table 31
NIRData$LabID = floor(NIRData$ScanID)
NIRData [1:15,]
# Table 29
NIRData = read.csv("Sugar_Cane_Input_Files/NIRPred.csv",
header = T, sep = ",", dec = ".")
# Table 30 /// The time already is a charecter when I import NIRData does it
#              still need to change to POSIXct type? Cause RStudio already recognise it
NIRData$DateTime = as.POSIXct(NIRData$DateTime, format = "%Y-%m-%d %H:%M:%S")
# Table 31
NIRData$LabID = floor(NIRData$ScanID)
NIRData [1:15,]
I
# Table 32
NIRData_Filtered = NIRData %>% filter(GH < 3.5 & NH < 2) %>%
filter(NIR_Brix > 15 & NIR_Brix < 30 & NIR_Pol > 50 & NIR_Pol <  105 &
NIR_Fibre > 4 & NIR_Fibre < 25 & NIR_Ash > 0 & NIR_Ash < 8) %>%
filter(ScanID > 0)
View(NIRData_Filtered)
View(NIRData_Filtered)
# Table 33
NIR_Final = NIRData_Filtered %>% group_by(LabID) %>%
summarise(DateTime = min(DateTime),NIR_Pol = mean(NIR_Pol), NIR_Brix = mean(NIR_Brix),
NIR_Fibre = mean(NIR_Fibre), NIR_Ash = mean(NIR_Ash))
NIR_Final[1:15,]
# Table 34
write.table(NIR_Final,file = "NIR_Final_Out.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = FALSE, col.names = TRUE,
qmethod = c("escape", "double"), fileEncoding = "")
summary(NIR_Final)
# Table 35
ggplot(data = NIR_Final) +
geom_smooth(mapping = aes(NIR_Pol, NIR_Fibre, color = LabID))
# Table 35
ggplot(data = NIR_Final) +
geom_smooth(mapping = aes(x = NIR_Pol, y = NIR_Fibre, color = LabID))
# Table 35
ggplot(data = NIR_Final) +
geom_smooth(mapping = aes(x = NIR_Pol, y = NIR_Fibre, color = LabID), show.legend = FALSE)
his1 = ggplot(data = NIR_Final) + geom_histogram(mapping = aes(NIR_Pol), col = "blue")
his1
his1 = ggplot(data = NIR_Final) + geom_histogram(mapping = aes(NIR_Pol),fill = "red", bins = 100) + theme_bw()
his1 = ggplot(data = NIR_Final) + geom_histogram(mapping = aes(NIR_Fibre),fill = "blue", bins = 100) + theme_bw()
his1 = ggplot(data = NIR_Final) + geom_histogram(mapping = aes(NIR_Pol),fill = "red", bins = 100) + theme_bw()
his2 = ggplot(data = NIR_Final) + geom_histogram(mapping = aes(NIR_Fibre),fill = "blue", bins = 100) + theme_bw()
gridExtra::grid.arrange(his1,his2,ncol = 2)
ggplot(data = NIR_Final) + geom_histogram(mapping = aes(NIR_Pol),fill = "red", bins = 100) + + geom_histogram(mapping = aes(NIR_Fibre),fill = "blue", bins = 100) + theme_bw()
ggplot(NIR_Final, aes(x=NIR_Pol, fill=NIR_Fibre)) + geom_histogram(alpha=0.2, position="identity")
ggplot(NIR_Final, aes(x=NIR_Pol, fill=NIR_Fibre), bins = 100) + geom_histogram(alpha=0.2, position="identity")
his = ggplot(data = NIR_Final) + geom_histogram(mapping = aes(NIR_Pol),fill = "pink",alpha = 0.5)
his
his = his + geom_histogram(mapping = aes(NIR_Fibre), fill = "blue",alpha = 0.5)
his
his1 = ggplot(data = NIR_Final) + geom_histogram(mapping = aes(NIR_Pol),fill = "red", bins = 100,alpha = 0.5) + theme_bw()
his2 = ggplot(data = NIR_Final) + geom_histogram(mapping = aes(NIR_Fibre),fill = "blue", bins = 100,alpha = 0.5) + theme_bw()
gridExtra::grid.arrange(his1,his2,ncol = 2)
his1 = ggplot(data = NIR_Final) + geom_histogram(mapping = aes(NIR_Pol),fill = "red", bins = 100,alpha = 0.5) + theme_bw() +geom_smooth()
his2 = ggplot(data = NIR_Final) + geom_histogram(mapping = aes(NIR_Fibre),fill = "blue", bins = 100,alpha = 0.5) + theme_bw()+geom_smooth()
gridExtra::grid.arrange(his1,his2,ncol = 2)
his1 = ggplot(data = NIR_Final) + geom_histogram(mapping = aes(NIR_Pol),fill = "red", bins = 100,alpha = 0.5) + theme_bw() + geom_density()
his2 = ggplot(data = NIR_Final) + geom_histogram(mapping = aes(NIR_Fibre),fill = "blue", bins = 100,alpha = 0.5) + theme_bw()
gridExtra::grid.arrange(his1,his2,ncol = 2)
his1 = ggplot(data = NIR_Final) + geom_histogram(mapping = aes(NIR_Pol),fill = "red", bins = 100,alpha = 0.5) + theme_bw() + geom_density(aes = y=0.5*..count..), colour="black", adjust=4)
his1 = ggplot(data = NIR_Final) + geom_histogram(mapping = aes(NIR_Pol),fill = "red", bins = 100,alpha = 0.5) + theme_bw() +
geom_density(mapping = aes(y=0.5*..count..), colour="black", adjust=4)
his2 = ggplot(data = NIR_Final) + geom_histogram(mapping = aes(NIR_Fibre),fill = "blue", bins = 100,alpha = 0.5) + theme_bw()
gridExtra::grid.arrange(his1,his2,ncol = 2)
his1 = ggplot(data = NIR_Final) + geom_histogram(mapping = aes(NIR_Pol),fill = "red", bins = 100,alpha = 0.5) + theme_bw() +
geom_density(mapping = aes( y = 0.5 * NIR_Pol), colour="black", adjust=4)
his2 = ggplot(data = NIR_Final) + geom_histogram(mapping = aes(NIR_Fibre),fill = "blue", bins = 100,alpha = 0.5) + theme_bw()
gridExtra::grid.arrange(his1,his2,ncol = 2)
his1 = ggplot(data = NIR_Final) + geom_histogram(mapping = aes(NIR_Pol),fill = "red", bins = 100,alpha = 0.5) + theme_bw() +
geom_density(mapping = aes( y = 0.5 * ..count..), colour="black", adjust=4)
his2 = ggplot(data = NIR_Final) + geom_histogram(mapping = aes(NIR_Fibre),fill = "blue", bins = 100,alpha = 0.5) + theme_bw()
gridExtra::grid.arrange(his1,his2,ncol = 2)
his1 = ggplot(data = NIR_Final) + geom_histogram(mapping = aes(NIR_Pol),fill = "red", bins = 100,alpha = 0.5) + theme_bw()
his2 = ggplot(data = NIR_Final) + geom_histogram(mapping = aes(NIR_Fibre),fill = "blue", bins = 100,alpha = 0.5) + theme_bw()
gridExtra::grid.arrange(his1,his2,ncol = 2)
his1 = ggplot(data = NIR_Final) +
geom_histogram(mapping = aes(NIR_Pol),fill = "red", bins = 100,alpha = 0.5) +
theme_bw() + labs(x = "naomal", y="uniform")
his2 = ggplot(data = NIR_Final) + geom_histogram(mapping = aes(NIR_Fibre),fill = "blue", bins = 100,alpha = 0.5) + theme_bw()
gridExtra::grid.arrange(his1,his2,ncol = 2)
View(NIR_Final)
View(NIR_Final)
# Table 35
ggplot(data = NIR_Final) +
geom_smooth(mapping = aes(x = NIR_Brix, y = NIR_Fibre, color = LabID), show.legend = FALSE)
# Table 35
his1 = ggplot(data = NIR_Final) +
geom_histogram(mapping = aes(NIR_Brix),fill = "red", bins = 100,alpha = 0.5) +
theme_bw() + labs(x = "Pol", y="Frequency")
his2 = ggplot(data = NIR_Final) +
geom_histogram(mapping = aes(NIR_Fibre),fill = "blue", bins = 100,alpha = 0.5) +
theme_bw() + labs(x = "Fibre", y="Frequency")
gridExtra::grid.arrange(his1,his2,ncol = 2)
# Table 36
summary(NIR_Final)
# Table 36
summary(NIR_Final$NIR_Brix,NIR_Final$NIR_Fibre)
summary(NIR_Final$NIR_Fibre)
# Table 37
ggour = ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Brix))
ggour = ggour + geom_point()
ggour = ggour + geom_smooth(mapping = aes(DateTime, NIR_Brix))
ggour
# Table 37
ggour = ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Brix))
ggour = ggour + geom_smooth()
ggour
Sys.getlocale()
Sys.setenv(LANG = "en_US")
# Table 37
ggour = ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Brix))
ggour = ggour + geom_smooth()
ggour
# Table 37
ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Brix)) + geom_smooth()
ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Brix)) + geom_smooth()
ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Fibre)) + geom_smooth(mapping = aes(DateTime, NIR_Fibre))
Sys.setenv(LANG = "en_US")
sdsd
sdsd
adad
adad
ada
library(ggplot2)
library(msr)
library(msd)
# Table 37
ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Brix)) + geom_smooth(mapping = aes(DateTime, NIR_Brix))
ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Fibre)) + geom_smooth(mapping = aes(DateTime, NIR_Fibre))
# Table 37
ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Brix)) + geom_smooth(mapping = aes(DateTime, NIR_Brix))
# Table 37
ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Brix)) + geom_smooth(mapping = aes(DateTime, NIR_Brix))
ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Fibre)) + geom_smooth(mapping = aes(DateTime, NIR_Fibre))
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
# Table 37
ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Brix)) + geom_smooth(mapping = aes(DateTime, NIR_Brix))
ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Fibre)) + geom_smooth(mapping = aes(DateTime, NIR_Fibre))
# Table 29
NIRData = read.csv("Sugar_Cane_Input_Files/NIRPred.csv",
header = T, sep = ",", dec = ".")
# Table 30 /// The time already is a charecter when I import NIRData does it
#              still need to change to POSIXct type? Cause RStudio already recognise it
NIRData$DateTime = as.POSIXct(NIRData$DateTime, format = "%Y-%m-%d %H:%M:%S")
# Table 31
NIRData$LabID = floor(NIRData$ScanID)
# Table 32
NIRData_Filtered = NIRData %>% filter(GH < 3.5 & NH < 2) %>%
filter(NIR_Brix > 15 & NIR_Brix < 30 & NIR_Pol > 50 & NIR_Pol <  105 &
NIR_Fibre > 4 & NIR_Fibre < 25 & NIR_Ash > 0 & NIR_Ash < 8) %>%
filter(ScanID > 0)
# Table 28
#~~~~~~~~~~~
# Libraries
#~~~~~~~~~~
library(dplyr)
library(ggplot2)
# Table 32
NIRData_Filtered = NIRData %>% filter(GH < 3.5 & NH < 2) %>%
filter(NIR_Brix > 15 & NIR_Brix < 30 & NIR_Pol > 50 & NIR_Pol <  105 &
NIR_Fibre > 4 & NIR_Fibre < 25 & NIR_Ash > 0 & NIR_Ash < 8) %>%
filter(ScanID > 0)
# Table 33
NIR_Final = NIRData_Filtered %>% group_by(LabID) %>%
summarise(DateTime = min(DateTime),NIR_Pol = mean(NIR_Pol), NIR_Brix = mean(NIR_Brix),
NIR_Fibre = mean(NIR_Fibre), NIR_Ash = mean(NIR_Ash))
# Table 34
write.table(NIR_Final,file = "NIR_Final_Out.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = FALSE, col.names = TRUE,
qmethod = c("escape", "double"), fileEncoding = "")
# Table 35
his1 = ggplot(data = NIR_Final) +
geom_histogram(mapping = aes(NIR_Brix),fill = "red", bins = 100,alpha = 0.5) +
theme_bw() + labs(x = "Pol", y="Frequency")
his2 = ggplot(data = NIR_Final) +
geom_histogram(mapping = aes(NIR_Fibre),fill = "blue", bins = 100,alpha = 0.5) +
theme_bw() + labs(x = "Fibre", y="Frequency")
gridExtra::grid.arrange(his1,his2,ncol = 2)
# Table 36
summary(NIR_Final$NIR_Brix)
summary(NIR_Final$NIR_Fibre)
# Table 37
ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Brix)) + geom_smooth(mapping = aes(DateTime, NIR_Brix))
ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Fibre)) + geom_smooth(mapping = aes(DateTime, NIR_Fibre))
Sys.setlocale("LC_TIME", "English")
# Table 28
#~~~~~~~~~~~
# Libraries
#~~~~~~~~~~
library(dplyr)
library(ggplot2)
# Table 29
NIRData = read.csv("Sugar_Cane_Input_Files/NIRPred.csv",
header = T, sep = ",", dec = ".")
# Table 30 /// The time already is a charecter when I import NIRData does it
#              still need to change to POSIXct type? Cause RStudio already recognise it
NIRData$DateTime = as.POSIXct(NIRData$DateTime, format = "%Y-%m-%d %H:%M:%S")
# Table 31
NIRData$LabID = floor(NIRData$ScanID)
# Table 32
NIRData_Filtered = NIRData %>% filter(GH < 3.5 & NH < 2) %>%
filter(NIR_Brix > 15 & NIR_Brix < 30 & NIR_Pol > 50 & NIR_Pol <  105 &
NIR_Fibre > 4 & NIR_Fibre < 25 & NIR_Ash > 0 & NIR_Ash < 8) %>%
filter(ScanID > 0)
# Table 33
NIR_Final = NIRData_Filtered %>% group_by(LabID) %>%
summarise(DateTime = min(DateTime),NIR_Pol = mean(NIR_Pol), NIR_Brix = mean(NIR_Brix),
NIR_Fibre = mean(NIR_Fibre), NIR_Ash = mean(NIR_Ash))
# Table 37
ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Brix)) + geom_smooth(mapping = aes(DateTime, NIR_Brix))
ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Fibre)) + geom_smooth(mapping = aes(DateTime, NIR_Fibre))
# Table 37
ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Brix)) + geom_smooth(mapping = aes(DateTime, NIR_Brix))
ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Fibre)) + geom_smooth(mapping = aes(DateTime, NIR_Fibre))
# Table 37
par(mfrow = c(2,2))
ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Brix)) + geom_smooth(mapping = aes(DateTime, NIR_Brix))
ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Fibre)) + geom_smooth(mapping = aes(DateTime, NIR_Fibre))
# Table 37
line1 = ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Brix)) + geom_smooth(mapping = aes(DateTime, NIR_Brix))
line2 = ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Fibre)) + geom_smooth(mapping = aes(DateTime, NIR_Fibre))
gridExtra::grid.arrange(line1,line2,ncol = 2)
# Table 37
line1 = ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Brix)) + geom_smooth(mapping = aes(DateTime, NIR_Brix)) + labs(x = "Month", y="Brix")
line2 = ggplot(data = NIR_Final, mapping = aes(DateTime, NIR_Fibre)) + geom_smooth(mapping = aes(DateTime, NIR_Fibre)) + labs(x = "Month", y="Fibre")
gridExtra::grid.arrange(line1,line2,ncol = 2)
